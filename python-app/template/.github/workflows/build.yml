name: Build ${{ values.app_name }}

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ '${{ github.repository }}' }}/${{ values.app_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      image-tag: ${{ '${{ steps.tag.outputs.IMAGE_TAG }}' }}
      full-image-name: ${{ '${{ steps.tag.outputs.FULL_IMAGE_NAME }}' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ '${{ secrets.GITHUB_TOKEN }}' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ '${{ env.REGISTRY }}' }}
        username: ${{ '${{ github.actor }}' }}
        password: ${{ '${{ secrets.GITHUB_TOKEN }}' }}

    - name: Generate image tag
      id: tag
      run: |
        FULL_SHA="${{ '${{ github.sha }}' }}"
        SHORT_SHA="${FULL_SHA:0:7}"
        
        if [[ ${{ '${{ github.event_name }}' }} == 'push' ]]; then
          TAG="${SHORT_SHA}"
        else
          TAG="pr-${{ '${{ github.event.number }}' }}-${SHORT_SHA}"
        fi
        echo "IMAGE_TAG=${TAG}" >> $GITHUB_OUTPUT
        echo "FULL_IMAGE_NAME=${{ '${{ env.REGISTRY }}' }}/${{ '${{ env.IMAGE_NAME }}' }}:${TAG}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ '${{ steps.tag.outputs.FULL_IMAGE_NAME }}' }}
          ${{ '${{ env.REGISTRY }}' }}/${{ '${{ env.IMAGE_NAME }}' }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Kubernetes manifests
      if: github.event_name == 'push'
      run: |
        # Install yq if not available
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
        
        # Update deployment.yaml with new image tag using yq
        yq eval '.spec.template.spec.containers[0].image = "${{ '${{ steps.tag.outputs.FULL_IMAGE_NAME }}' }}"' -i k8s/deployment.yaml

    - name: Commit and push updated manifests
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add k8s/deployment.yaml
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update image tag to ${{ '${{ steps.tag.outputs.IMAGE_TAG }}' }} [skip ci]"
          git push
        fi 